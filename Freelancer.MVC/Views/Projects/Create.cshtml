@model Freelancer.MVC.Models.ProjectCreateModel

@{
    ViewBag.Title = "Create project";
    var date = DateTime.Now.ToString("yyyy-MM-dd");
}

<div class="section-title">
    <div class="">@ViewBag.Title</div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="hidden-link" data-url="@Url.Action("LoadSkills","Skills")"/>
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Skills, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div id="skillsList">
                    <img src="~/Content/Images/ajax-loader.gif" />
                </div>            
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartPrice, new { htmlAttributes = new { @class = "form-control", @min = "1", @max = "10000" } })
                @Html.ValidationMessageFor(model => model.StartPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndPrice, new { htmlAttributes = new { @class = "form-control", @min = "1", @max = "10000" } })
                @Html.ValidationMessageFor(model => model.EndPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control", @id = "datepicker", @min = @date } })
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    $(document).ready(function () {

        $.ajax({
            url: $("#hidden-link").attr("data-url"),
            type: 'GET',
            cache: false,
            success: function (result) {
                $('#skillsList').html(result);
            }
        });


        $startPriceInput = $("#project_StartPrice");
        $endPriceInput = $("#project_EndPrice");
        $startPriceMessage = $("span[data-valmsg-for='project.StartPrice']");

        $startPriceInput.change(function () {
            compareInputs();
        });
        
        $endPriceInput.change(function () {
            compareInputs();
        });

        function compareInputs()
        {
            if (parseInt($startPriceInput.val()) > parseInt($endPriceInput.val())) {
                $startPriceMessage.text("Start Price must be less than End Price");
                $endPriceMessage.text("End Price must be greater than Start Price");
            } else {
                $startPriceMessage.text("");
            }
        }

    }())
</script>